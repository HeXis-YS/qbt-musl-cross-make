name: qbt-mcm docker build and release

on:
  workflow_dispatch:
    inputs:
      skip_rerun:
        description: "Skip rerun?"
        required: true
        type: boolean
      retries:
        description: 'Number of rerun retries'
        required: true
        default: '5'
        type: choice
        options: [ "1", "2", "3", "4", "5", "6", "7", "8", "9" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch_type:
          [
            aarch64-linux-musl,
            arm-linux-musleabi,
            arm-linux-musleabihf,
            armv6-linux-musleabihf,
            armv7l-linux-musleabihf,
            i686-linux-musl,
            x86_64-linux-musl,
            mips-linux-musl,
            mipsel-linux-musl,
            mips64-linux-musl,
            mips64el-linux-musl,
            powerpc-linux-musl,
            powerpc64le-linux-musl,
            s390x-linux-musl,
            riscv64-linux-musl,
          ]

    name: qtb-mcm-docker ${{ matrix.arch_type }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: userdocs/qbt-mcm

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: userdocs/qbt-mcm:${{ matrix.arch_type }}
          build-args: |
            TARGET=${{ matrix.arch_type }}
            BASE_URL=https://github.com/userdocs/qbt-musl-cross-make/releases/latest/download
            NINJA_URL=https://github.com/userdocs/qbt-ninja-build/releases/latest/download/ninja-x86_64

  rerun-on-failure:
    if: failure() && inputs.skip_rerun == '0'
    name: rerun-on-failure
    needs: build
    permissions:
      actions: write
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
    steps:
      - uses: actions/checkout@v4
      - name: Trigger rerun workflow on job failures
        run: |
          inputs_retries="${{ inputs.retries }}"
          gh workflow run rerun.yml -f run_id=${{ github.run_id }} -f attempts=${{ github.run_attempt }} -f retries=${inputs_retries:-5}
